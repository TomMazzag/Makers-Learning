from lib.diary import *

#Contents generated by ChatGPT
long_contents = "Today was a day filled with lines of code,\
                debugging challenges, and the sweet satisfaction of solving intricate problems.\
                As I sit down to pen my thoughts, the glow of the computer screen still lingers\
                in my eyes, a testament to the hours spent immersed in the world of coding.\
                The day kicked off with a surge of excitement as I delved into a new project.\
                The thrill of embarking on a coding journey always brings a sense of anticipation.\
                The blank canvas of the code editor awaited my keystrokes, promising endless possibilities.\
                I outlined the structure of the program, carefully considering the architecture and design patterns\
                that would best suit the task at hand. It's fascinating how a few well-thought-out lines\
                of code can lay the foundation for a complex system."

def test_format():

    entry = DiaryEntry('Programming day 1', 'This is an entry about coding')
    result = entry.format()
    assert result == 'Programming day 1: This is an entry about coding'

def test_word_count():

    entry = DiaryEntry('Programming day 1', 'This is an entry about coding')
    result = entry.count_words()
    assert result == 9

def test_reading_time():
    entry = DiaryEntry('Programming day 1', long_contents)
    
    result = entry.reading_time(40)
    assert result == 3

def test_phrase_in_given_minutes():

    entry = DiaryEntry('Programming day 1', long_contents)
    
    result = entry.reading_chunk(40, 1)
    assert result == ("Programming day 1 Today was a day filled with lines of code,"
                " debugging challenges, and the sweet satisfaction of solving intricate problems."
                " As I sit down to pen my thoughts, the glow of the computer screen still lingers"
                " in my ")

def test_multiple_calls():

    entry = DiaryEntry('Programming day 1', long_contents)
    
    result = entry.reading_chunk(40, 1)
    result = entry.reading_chunk(40, 1)
    assert result == ("Programming day 1 Today was a day filled with lines of code,"
                " debugging challenges, and the sweet satisfaction of solving intricate problems."
                " As I sit down to pen my thoughts, the glow of the computer screen still lingers"
                " in my eyes, a testament to the hours spent immersed in the world of coding. The"
                " day kicked off with a surge of excitement as I delved into a new project. The thrill"
                " of embarking on a coding journey always brings a ")

